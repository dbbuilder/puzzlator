name: Supabase Database Setup

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to setup'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging
        - development

jobs:
  setup-database:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install PostgreSQL client
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client
    
    - name: Run Database Setup
      env:
        DATABASE_URL: ${{ secrets.SUPABASE_DB_URL }}
        PGCONNECT_TIMEOUT: 30
      run: |
        if [ -z "$DATABASE_URL" ]; then
          echo "‚ùå Error: SUPABASE_DB_URL secret is not set"
          echo "Please add SUPABASE_DB_URL to your GitHub repository secrets"
          echo "Format: postgresql://postgres:[YOUR-PASSWORD]@db.[YOUR-PROJECT-REF].supabase.co:5432/postgres"
          exit 1
        fi
        
        echo "üöÄ Setting up Supabase database..."
        
        # Test connection first
        echo "Testing database connection..."
        if psql "$DATABASE_URL" -c "SELECT 1;" > /dev/null 2>&1; then
          echo "‚úÖ Database connection successful"
        else
          echo "‚ùå Failed to connect to database"
          echo "Trying alternative connection method..."
          # Try with explicit IPv4
          DATABASE_URL_IPV4=$(echo "$DATABASE_URL" | sed 's/@db\./@db./')
          export DATABASE_URL="$DATABASE_URL_IPV4"
        fi
        
        # Run the setup script
        psql "$DATABASE_URL" < scripts/setup-supabase-tables.sql
        
        echo "‚úÖ Database setup complete!"
    
    - name: Verify Setup
      env:
        DATABASE_URL: ${{ secrets.SUPABASE_DB_URL }}
      run: |
        echo "üîç Verifying database setup..."
        
        # Check if tables exist
        TABLES=$(psql "$DATABASE_URL" -t -c "SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_type = 'BASE TABLE';")
        
        echo "üìã Found tables:"
        echo "$TABLES"
        
        # Check for required tables
        for table in user_profiles puzzles game_sessions achievements user_achievements leaderboard; do
          if echo "$TABLES" | grep -q "$table"; then
            echo "‚úÖ Table '$table' exists"
          else
            echo "‚ùå Table '$table' is missing"
          fi
        done
    
    - name: Create Setup Report
      if: always()
      run: |
        echo "## Supabase Setup Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- Environment: ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
        echo "- Timestamp: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "- Status: Check the logs above" >> $GITHUB_STEP_SUMMARY